spring:
  application:
    name: spring-batch-study
  batch:
    jdbc:
      initialize-schema: ALWAYS
    job:
      enabled: false
  devtools:
    livereload:
      enabled: true
    restart:
      enabled: false
  thymeleaf:
    cache: false
    suffix: .html
    check-template-location: true
  mvc:
    view:
      prefix: /WEB-INF/
      suffix: .jsp
    static-path-pattern: "/static/**"
  # H2 Setting Info (H2 Console에 접속하기 위한 설정정보 입력)
  ############# local mode #############
  #  h2:
  #    console:
  #      enabled: true  # H2 Console을 사용할지 여부 (H2 Console은 H2 Database를 UI로 제공해주는 기능)
  #      path: /h2-console  # H2 Console의 Path
  # Database Setting Info (Database를 H2로 사용하기 위해 H2연결 정보 입력)
  #  datasource:
  #    driver-class-name: org.h2.Driver  # Database를 H2로 사용하겠다.
  #    url: jdbc:h2:~/testDB  # H2 접속 정보
  #    username: sa  # H2 접속 시 입력할 username 정보 (원하는 것으로 입력)
  #    password:  # H2 접속 시 입력할 password 정보 (원하는 것으로 입력)
  ############# 서버 mode #############
  #  datasource:
  #    driver-class-name: org.h2.Driver  # Database를 H2로 사용하겠다.
  #    url: jdbc:h2:tcp://localhost/~/test # H2 접속 정보
  #    username: sa  # H2 접속 시 입력할 username 정보 (원하는 것으로 입력)
  #    password:  # H2 접속 시 입력할 password 정보 (원하는 것으로 입력)
  ############# p6spy 서버 mode #############
  datasource:
    driver-class-name: com.p6spy.engine.spy.P6SpyDriver
    url: jdbc:p6spy:h2:tcp://localhost/~/spring-batch-study;DB_CLOSE_DELAY=-1 # H2 접속 정보
    username: sa  # H2 접속 시 입력할 username 정보 (원하는 것으로 입력)
    password:  # H2 접속 시 입력할 password 정보 (원하는 것으로 입력)
  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        use_sql_comments: true
#        default_batch_fetch_size: 30
#        jdbc:
#          batch_size: 100
# 로그 레벨 설정
logging:
  level:
    p6spy: debug
    # hibernate 가 남기는 모든 로그가 debug모드로 설정
    # jpa hibernate가 생성하는 sql이 로거를 통해서 찍히도록 하는 설정
  charset:
    console: UTF-8
  file:
    path: /logs
#    org.hibernate.SQL: debug
#    org.hibernate.type: trace # 실제 들어가는 파라미터값 찍어주는 설정

#p6spy query logging
decorator.datasource.p6spy:
  enable-logging: true
  multiline: true
  logging: slf4j
  tracing.include-parameter-values: true

# Swagger Doc
springdoc:
  version: v1.0.0
  packages-to-scan: kr.co.kjc.batch
  swagger-ui:
    path: /api-docs
    tags-sorter: alpha
    operations-sorter: alpha
  api-docs:
    path: /api-docs/json
    groups:
      enabled: true
  override-with-generic-response: true
server:
  servlet:
    session:
      cookie:
        same-site: lax